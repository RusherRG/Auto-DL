name: Development deployments

on: push

jobs:
  docker-push:
    name: Push docker images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get latest tag
        id: latest_tag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push BackEndApp image
        id: backend_docker_build
        uses: docker/build-push-action@v2
        with:
          context: BackEndApp/
          tags: autodlhub/backend:${{ steps.latest_tag.outputs.tag }}
          push: true

      - name: Build and push FrontEndApp image
        id: frontend_docker_build
        uses: docker/build-push-action@v2
        with:
          context: FrontEndApp/v1-react/
          tags: autodlhub/frontend:${{ steps.latest_tag.outputs.tag }}
          push: true

  civo-deploy:
    name: Deploy to civo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: 'Auto-DL/k8s-deployment'
      - name: Install civo
        uses: civo/action-civo@v1.0.0
        with:
          token: ${{ secrets.CIVO_TOKEN }}
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client
      - name: Configure civo kubeconfig
        run: |
          civo kubernetes config development --save --merge
          kubectl config use-context development
      - name: Get pods
        run: kubectl get pods
